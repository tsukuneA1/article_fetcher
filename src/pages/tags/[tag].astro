---
import Layout from '../../layouts/BlogTopLayout.astro'

import '../..//styles/notion-color.css'
import '../../scss/blog.scss'
import NoContents from '../../components/NoContents.astro'
import PostTitle from '../../components/PostTitle.astro'
import PostExcerpt from '../../components/PostExcerpt.astro'
import PostTags from '../../components/PostTags.astro'
import PostDate from '../../components/PostDate.astro'
import ReadMoreLink from '../../components/ReadMoreLink.astro'
import type { Post, User } from '../../libs/interfaces'
import BlogTagsLink from '../../components/BlogTagsLink.astro'
import { getTags } from '../../libs/functions'

export async function getStaticPaths() {
  const siteUrl = import.meta.env.SITE_URL as string;

  const response = await fetch(`${siteUrl}/api/posts`);
  const allPosts = await response.json();
  const tags = getTags(allPosts);
  return tags.map((tag) => ({ params: { tag } }));
}
const { tag } = Astro.params

// const [posts, tags] = await Promise.all([
//   getPostsByTag(tag),
//   getAllTags(),
// ]);
const siteUrl = import.meta.env.SITE_URL as string;

const response = await fetch(`${siteUrl}/api/posts`);
const allPosts = await response.json();
const posts = allPosts.filter((post: Post) => post.Tags.includes(tag));
const tags = getTags(allPosts);
---

<Layout title={`${tag}タグの投稿一覧`} path={`/posts/tag/${tag}`} description='' ogImage=''>
  <div slot="main">
    <header>
      <div class="tag-container">
        <span class={`tag gray`}>{tag}</span>
      </div>
    </header>

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post: Post) => (
          <div class="blog-card">
            <div class="blog-card__contents">
              <PostTitle post={post} />
              <PostExcerpt post={post} />
              <PostTags post={post}/>
              <PostDate post={post} />
              <ReadMoreLink post={post} />
            </div>
          </div>
        ))
      )
    }

    <!-- <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} /> -->
  </div>

  <div slot="aside">
    <BlogTagsLink heading="タグ別" tags={tags} />
  </div>
</Layout>
<style>
  body {
    background-color: #edf2f7;
  }
</style>